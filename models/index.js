/**
 * This is mostly default code generated by `sequelize init`.
 * I modified it to fit my own coding style.
 */

const Sequelize = require('sequelize'),
      config = require('config'),
      log = require('../logger'),
      path = require('path'),
      fs = require('fs')
const sequelize = new Sequelize(
  config.get('database.database'), 
  config.get('database.username'), 
  config.get('database.password'),
  Object.assign({
    //logging: log.debug.bind(log) // binding log to log.debug fixes this obscure logging error for some reason (https://github.com/sequelize/sequelize/issues/7821#issuecomment-310119093)
    logging: function noop(){} // actually just gonna NOOP this because it seems to not like winston at all
  }, config.get('database.sequelize'))
)
const basename = path.basename(__filename)
const db = {}
sequelize
  .authenticate()
  .then(() => {
    log.info('Successfully authenticated with the database.')
    fs.readdirSync(__dirname)
      .filter(file => {
        return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js')
      })
      .forEach(file => {
        var model = sequelize.import(path.join(__dirname, file))
        db[model.name] = model
      })
    Object.keys(db).forEach(modelName => {
      if (db[modelName].associate) db[modelName].associate(db)
    })
  })
  .catch((err) => {
    console.error(err)
    log.error('Failed to authenticate with the database.', err)
  })

db.sequelize = sequelize
db.Sequelize = Sequelize

module.exports = db
